steps:
  # Get the backend service URL
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'get-backend-url'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        BACKEND_URL=$(gcloud run services describe fabooks-api --platform managed --region ${_REGION} --format 'value(status.url)')
        echo "Backend URL: $BACKEND_URL"
        echo "BACKEND_URL=$BACKEND_URL" > /workspace/backend_url.env

  # Update environment.prod.ts with backend URL
  - name: 'gcr.io/cloud-builders/npm'
    id: 'update-environment'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        source /workspace/backend_url.env
        sed -i "s|https://fabooks-api-PROJECTID.run.app|$BACKEND_URL|g" src/environments/environment.prod.ts
        cat src/environments/environment.prod.ts

  # Update nginx.conf with backend URL
  - name: 'gcr.io/cloud-builders/npm'
    id: 'update-nginx-conf'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        source /workspace/backend_url.env
        sed -i "s|\${BACKEND_URL}|$BACKEND_URL|g" nginx.conf
        cat nginx.conf

  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/fabooks/frontend', '.']

  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/fabooks/frontend']

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'fabooks-frontend'
      - '--image=${_REGION}-docker.pkg.dev/${PROJECT_ID}/fabooks/frontend'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'

images:
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/fabooks/frontend'

substitutions:
  _REGION: us-central1

# Only trigger on main branch
tags: ['github-fabooks-frontend'] 